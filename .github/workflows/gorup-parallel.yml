name: My Workflow

on: [push]

jobs:
  group1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job1: ['true', 'false']
        job2: ['true', 'false']
        job3: ['true', 'false']
    steps:
      - name: Parse JSON
        run: |
          # Parse the JSON file and extract job names and values
          # Assumes that the JSON file is in the root of the repository
          JOBS=$(jq -r '.jobs | to_entries | .[] | [.key, .value] | @tsv' repos.json)
          echo "$JOBS" > jobs.tsv

      - name: Trigger Jobs
        if: always()
        id: trigger-jobs
        run: |
          # Trigger jobs based on their values
          while IFS=$'\t' read -r job value; do
            if [ "$value" = "true" ]; then
              echo "Triggering $job job..."
              gh job run $job -b $value
            fi
          done < jobs.tsv

  group2:
    needs: group1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job4: ['true', 'false']
        job5: ['true', 'false']
        job6: ['true', 'false']
    steps:
      - name: Parse JSON
        run: |
          # Parse the JSON file and extract job names and values
          # Assumes that the JSON file is in the root of the repository
          JOBS=$(jq -r '.jobs | to_entries | .[] | [.key, .value] | @tsv' repos.json)
          echo "$JOBS" > jobs.tsv

      - name: Trigger Jobs
        if: always()
        id: trigger-jobs
        run: |
          # Trigger jobs based on their values
          while IFS=$'\t' read -r job value; do
            if [ "$value" = "true" ]; then
              echo "Triggering $job job..."
              gh job run $job -b $value
            fi
          done < jobs.tsv
